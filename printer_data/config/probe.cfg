#[mcu RP2040]
#baud: 115200
#restart_method: command
# Obtain definition by "ls -l /dev/serial/by-id/"
# SET_KINEMATIC_POSITION Z=0
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E6625C4893458F33-if00

#[probe]
#pin: ^RP2040: gpio5
#deactivate_on_each_sample: False
#x_offset: -20
#y_offset: -25
#z_offset: 9.966667
#speed: 5.0
#samples: 3
#sample_retract_dist: 1
#lift_speed:5
#samples_result: average
#samples_tolerance: 0.006
#samples_tolerance_retries: 5



[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
gcode:
  ### Parameter setzen ###
  {% set meshOffset = params.MESH_AREA_OFFSET|default(0.0)|float %}
  {% set probeSamples = params.PROBE_SAMPLES|default(2)|int %}
  {% set minProbeCount = params.MIN_PROBE_COUNT|default(3)|int %}
  {% set maxProbeCount = params.MAX_PROBE_COUNT|default(7)|int %}

  {% set areaStart = params.AREA_START|default("0,0")|string %}
  {% set areaEnd = params.AREA_END|default("0,0")|string %}

  {% set safe_min_x = printer['gcode_macro _USER_VARIABLE'].probe_x_min + meshOffset %}
  {% set safe_min_y = printer['gcode_macro _USER_VARIABLE'].probe_y_min + meshOffset %}
  {% set safe_max_x = printer['gcode_macro _USER_VARIABLE'].probe_x_max - meshOffset %}
  {% set safe_max_y = printer['gcode_macro _USER_VARIABLE'].probe_y_max - meshOffset %}

  ### Parameter bekommen? ###
  {% if params.AREA_START and params.AREA_END %}
    {% set area_min_x = areaStart.split(",")[0]|float %}
    {% set area_min_y = areaStart.split(",")[1]|float %}
    {% set area_max_x = areaEnd.split(",")[0]|float %}
    {% set area_max_y = areaEnd.split(",")[1]|float %}

    ### Pruefe Objektbereich ###
    {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
       ### SAFE MIN X Area ###
       {% if area_min_x < safe_min_x %}
         {% set area_min_x = safe_min_x %}
       {% endif %}

       ### SAFE MIN Y Area ###
       {% if area_min_y < safe_min_y %}
         {% set area_min_y = safe_min_y %}
       {% endif %}

       ### SAFE MAX X Area ###
       {% if area_max_x > safe_max_x %}
         {% set area_max_x = safe_max_x %}
       {% endif %}

       ### SAFE MAX Y Area ###
       {% if area_max_y > safe_max_y %}
         {% set area_max_y = safe_max_y %}
       {% endif %}

       ### Minimale Probes auf X errechnen ###
       {% set meshPointX = (maxProbeCount * (area_max_x - area_min_x) / (safe_max_x - safe_min_x))|round(0)|int %}
       {% if meshPointX < minProbeCount %}
         {% set meshPointX = minProbeCount %}
       {% endif %}
       {% if meshPointX > maxProbeCount %}
         {% set meshPointX = maxProbeCount %}
       {% endif %}

       ### Minimale Probes auf Y errechnen ###
       {% set meshPointY = (maxProbeCount * (area_max_y - area_min_y) / (safe_max_y - safe_min_y))|round(0)|int %}
       {% if meshPointY < minProbeCount %}
         {% set meshPointY = minProbeCount %}
       {% endif %}
      {% if meshPointY > maxProbeCount %}
         {% set meshPointY = maxProbeCount %}
       {% endif %}

       {% if meshPointX >= meshPointY + 6 %}
         {% set meshPointY = meshPointX - 6 %}
       {% endif %}

       {% if meshPointY >= meshPointX + 6 %}
         {% set meshPointX = meshPointY - 6 %}
       {% endif %}

      

      #{% set referenceposition = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %} #--------------------- relative_reference_index old
      RESPOND MSG="Meshpoints X,Y:"{meshPointX},{meshPointY}
       ### Probe ###
      RESPOND MSG="PROBE AREA"
      BED_MESH_CLEAR
      #G28 X Y
      #G28
      RESPOND MSG="Area min:"{area_min_x},{area_min_y}
      RESPOND MSG="Area max:"{area_max_x},{area_max_y}
      RESPOND MSG="Probe count:"{meshPointX},{meshPointY}
      RESPOND MSG="Probe samples:"{probeSamples|int}
      BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probeSamples|int} zero_reference_position={area_max_x},{area_max_y}
      #G28
      RESPOND MSG="MESHING DONE"

    ### Eingangsdaten stimmen nicht ###
    {% else %}
    RESPOND MSG="WRONG BED PROBING INIT"
    BED_MESH_CLEAR
    #G28 X Y
    #G28
    BED_MESH_CALIBRATE_BASE
     #G28
    {% endif %}

  ### Keine Parameter ###
  {% else %}
    RESPOND MSG="NO PROBE PARAMETER"
    BED_MESH_CLEAR
    #G28 X Y
    #G28
    BED_MESH_CALIBRATE_BASE
     #G28
  {% endif %}


