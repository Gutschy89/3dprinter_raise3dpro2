
[include stepper.cfg]  #Stepper Extrudor und Head Bead
[include fluidd.cfg]
[include mainsail.cfg]
[include user_variables.cfg]
[include macro.cfg]
[include ebb42.cfg]
[force_move]
enable_force_move = True
[exclude_object]
[gcode_arcs]


[extruder]
pressure_advance: 0.115
#smooth_time: 0.04

[firmware_retraction]
retract_length: 2
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 42
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 42
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 42
#   The speed of unretraction, in mm/s. The default is 10 mm/s.




[verify_heater heater_bed]
# adjust for personal bed setup, this prevents stock heated bed from issuing
# false positive heating errors due to slow temperature increase
# 1 deg per 2 minutes.
heating_gain = 1
check_gain_time = 240

[fan]
pin = PA7

[fan_generic extruder_left]
pin = PA6

[verify_heater extruder]
check_gain_time = 600

[verify_heater extruder1]
check_gain_time = 600

[mcu]
serial = /dev/serial/by-id/usb-Klipper_stm32h743xx_100007801351363433303634-if00

[printer]
kinematics = cartesian
max_velocity = 350
max_accel = 3000  #4800
#max_accel_to_decel: 4200 #4200
max_z_velocity = 15
max_z_accel = 100
square_corner_velocity = 6.0

[input_shaper]
shaper_freq_x: 27.8
shaper_type_x: zv
shaper_freq_y: 24.4
shaper_type_y: mzv

[static_digital_output my_output_pins]
pins =
	PB7,
	PG15,
	PE3,
	!PI1,
	PH13,
	!PH14,
	!PH15


[fan_generic current_E0]
pin = PE13
cycle_time = 0.001


#[controller_fan board_fan]
#pin= PE13            # ggf. invertiert: !PE13 (falls „auf dem Kopf“)
#cycle_time= 0.01     # 10 ms = 100 Hz (sehr unkritisch)
#fan_speed= 1.0
#idle_speed= 0.0      # oder 0.0 für komplett aus
#idle_timeout= 60
#off_below= 0.2
#kick_start_time= 0.5
#stepper: stepper_x, stepper_y, stepper_z, extruder, extruder1
#heater: extruder, heater_bed, extruder1   # weglassen, wenn NUR bei Motoraktivität


[fan_generic current_E1]
pin = PE11
cycle_time = 0.001

#[controller_fan current_E1]
#pin= PE11            # ggf. invertiert: !PE13 (falls „auf dem Kopf“)
#cycle_time= 0.01     # 10 ms = 100 Hz (sehr unkritisch)
#fan_speed= 1.0
#idle_speed= 0.0      # oder 0.0 für komplett aus
#idle_timeout= 60
#off_below= 0.2
#kick_start_time= 0.5
#stepper: stepper_x, stepper_y, stepper_z, extruder, extruder1
#heater: extruder, heater_bed, extruder1   # weglassen, wenn NUR bei Motoraktivität

[gcode_macro SET_PERCENT]
gcode = 
	{action_respond_info( "P=%d\n" % (params.VALUE|float * 100))}

[gcode_macro M106]
rename_existing = M106.1
gcode = 
	{% if 'S' in params %}
	M106.1 { rawparams }
	SET_FAN_SPEED FAN=extruder_left SPEED={params.S|float / 255}
	{% endif %}

[gcode_macro M107]
rename_existing = M107.1
gcode = 
	M107.1
	SET_FAN_SPEED FAN=extruder_left SPEED=0

[output_pin extruder]
pin = PB14
value = 1

[filament_switch_sensor F0]
switch_pin = PG7
pause_on_runout = False

[filament_switch_sensor F1]
switch_pin = PG6
pause_on_runout = False

[gcode_macro M405]
gcode = 
	SAVE_VARIABLE VARIABLE=filament_sensor_enabled VALUE=1
	SET_FILAMENT_SENSOR SENSOR=F0 ENABLE=1
	SET_FILAMENT_SENSOR SENSOR=F1 ENABLE=1

[gcode_macro M406]
gcode = 
	SAVE_VARIABLE VARIABLE=filament_sensor_enabled VALUE=0
	SET_FILAMENT_SENSOR SENSOR=F0 ENABLE=0
	SET_FILAMENT_SENSOR SENSOR=F1 ENABLE=0

[save_variables]
filename = /home/pi/printer_data/config/variable.cfg

[gcode_macro T0]
gcode = 
	G1 F21000
	SET_GCODE_OFFSET Z=0 X=0 Y=0 MOVE=1
	ACTIVATE_EXTRUDER extruder=extruder
	SAVE_VARIABLE VARIABLE=currentextruder VALUE='"extruder"'
	SET_PIN PIN=extruder VALUE=1
	G4 P500
	SET_FAN_SPEED FAN=current_E0 SPEED=0.3
	{% set svv = printer.save_variables.variables %}
	{% if svv.filament_sensor_enabled|int != 0 %}
	SET_FILAMENT_SENSOR SENSOR=F1 ENABLE=0
	SET_FILAMENT_SENSOR SENSOR=F0 ENABLE=1
	{% endif %}

[gcode_macro T1]
gcode = 
	G1 F21000
	ACTIVATE_EXTRUDER extruder=extruder1
	SAVE_VARIABLE VARIABLE=currentextruder VALUE='"extruder1"'
	SET_PIN PIN=extruder VALUE=0
	G4 P500
	SET_FAN_SPEED FAN=current_E1 SPEED=0.3
	SET_GCODE_OFFSET Z=-0.07 X=-25 Y=0 MOVE=1
	{% set svv = printer.save_variables.variables %}
	{% if svv.filament_sensor_enabled|int != 0 %}
	SET_FILAMENT_SENSOR SENSOR=F1 ENABLE=1
	SET_FILAMENT_SENSOR SENSOR=F0 ENABLE=0
	{% endif %}


[gcode_macro START_GCODE]
gcode = 
	{% set svv = printer.save_variables.variables %}
	ACTIVATE_EXTRUDER extruder={svv.currentextruder}

[gcode_macro M33]
gcode = 
	SDCARD_RESET_FILE

[virtual_sdcard]
path = /home/pi/printer_data/gcodes

[idle_timeout]
timeout = 1200
gcode =

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 74.499
#*# pid_ki = 1.106
#*# pid_kd = 1254.372
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.237
#*# pid_ki = 1.223
#*# pid_kd = 140.696
#*#
#*# [extruder1]
#*# control = pid
#*# pid_kp = 23.586
#*# pid_ki = 0.989
#*# pid_kd = 140.633





[gcode_macro PULSE_PIN]
description: Pulse einen output_pin mehrfach (ON/OFF in ms)
gcode:
  {% set p = params.PIN|default("PB7_test") %}
  {% set on = (params.ON|default(500)|int) %}     # ms High-Zeit pro Puls
  {% set off = (params.OFF|default(500)|int) %}   # ms Low-Zeit zwischen Pulsen
  {% set n = (params.COUNT|default(1)|int) %}     # Anzahl Pulse
  {% set active = (params.ACTIVE|default(1)|int) %}   # 1 = aktiv HIGH, 0 = aktiv LOW
  {% set inactive = 0 if active else 1 %}

  {% for i in range(n) %}
    SET_PIN PIN={p} VALUE={active}
    G4 P{on}
    SET_PIN PIN={p} VALUE={inactive}
    {% if not loop.last %}
      G4 P{off}
    {% endif %}
  {% endfor %}


[gcode_macro FORCEMOVE_Z_UP_10]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        FORCE_MOVE STEPPER=stepper_z DISTANCE=10 VELOCITY=5 ACCEL=100
    {% else %}
        G1 Z{printer.gcode_move.gcode_position.z+10} F5
    {% endif %}